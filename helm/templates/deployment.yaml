{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awesome-runbooks
  namespace: {{ .Release.Namespace }}
  labels:
    gateway-selector: awesome-runbooks
    app: awesome-runbooks
    component: awesome-runbooks
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- range $key, $val := .Values.global.commonLabels }}
    {{ $key }}: "{{ $val }}"
  {{- end }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
  template:
    metadata:
      labels:
        app: awesome-runbooks
        component: awesome-runbooks
      {{- range $key, $val := .Values.global.commonLabels }}
        {{ $key }}: "{{ $val }}"
      {{- end }}
    spec:
      # Created by this chart.
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      containers:
      - name: awesome-runbooks
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        # Optional authorization token passed in all requests
        {{- if .Values.deployment.extraEnv }}
        {{- range $key, $val := .Values.deployment.extraEnv }}
        - name: {{ $key }}
          value: |-
{{ $val | indent 12 }}
        {{- end }}
        {{- end }}
        ports:
        {{ with index .Values.service.ports 0 }}
        - containerPort: {{ .port }}
        {{- end }}
        {{ with index .Values.service.ports 1 }}
        - containerPort: {{ .port }}
        {{- end }}
        {{- if .Values.deployment.resources }}
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10 }}
        {{- end }}

  {{- if .Values.nfs.enabled }}
        volumeMounts:
        - name: nfs-credential
          mountPath: "/unskript"
      volumes:
      - name: nfs-credential
        nfs:
          server: {{ .Values.nfs.internalServerIPAddress }}
          path: "/unskript"
  {{- else if .Values.credentialPvc.enabled }}
        volumeMounts:
        - name: credential-pvc
          mountPath: "/unskript"
      volumes:
      - name: credential-pvc
        persistentVolumeClaim:
          claimName: {{ .Values.credentialPvc.name }}

  {{- if .Values.deployment.tolerations }}
      tolerations:
      {{- toYaml .Values.deployment.tolerations | nindent 8 }}
  {{- end }}
  {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
  {{- end }}
  {{- if .Values.deployment.affinity }}
      affinity:
      {{- toYaml .Values.deployment.affinity | nindent 8 }}
  {{- end }}

  {{- end }}
{{- end }}
